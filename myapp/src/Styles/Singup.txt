import React from "react";
import { useState ,useEffect } from "react";
import axios from "axios";
import { Link } from "react-router-dom";

export default function Signup() {

  const name = React.useRef(null);
  const email = React.useRef(null);
  const password = React.useRef(null);
  const conpassword = React.useRef(null);

  const [userForm, setUserForm] = useState({
    name: "",
    email: "",
    password: "",
    conpassword: "",
  });
  const [users, setUsers] = useState([]);
  const [nameMess ,setNameMess] = useState('');
  const [emailMess ,setEmailMess] = useState('');
  const [passMess ,setPassMess] = useState('');

  const nameRegex = /^[a-zA-Z\s]*$/;
  const emailRegex = /^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})$/;
  const passRegex = /^(?:([A-Z])*([a-z])*(\d)*(\W)*){8,12}$/;

  useEffect(() => {
    axios.get("http://localhost:5000/api/getUsers")
      .then((user) => setUsers(user.data))
      .catch((err) => console.log(err));
  }, []);

  const handleChange = (e) => {
    console.log(e.target.name, e.target.value);
    setUserForm({
      ...userForm,
      [e.target.name]: e.target.value,
    });
  }

  const handleSubmit = async (e) => {
    e.preventDefault();
    console.log(userForm.name)
    if(userForm.name==="" || userForm.email==="" || userForm.password==="" || userForm.conpassword===""){
         alert("Fill the data!")
         setUserForm({ name: "", email: "", password: "", conpassword: "" });
    }
    else{
    const response = await fetch("http://localhost:5000/api", {
      method: "POST",
      body: JSON.stringify(userForm),
      headers: {
        "Content-Type": "application/json",
      }
    });
    const resData = await response.text();
    console.log(resData);
    setUserForm({ name: "", email: "", password: "", conpassword: "" });
   }
  }

  useEffect(()=>{
     if(nameRegex.test(userForm.name)){
       setNameMess('')
     }
     else{
       setNameMess('Name required only a-z or A-Z characters!')
     }
  },[userForm.name])

  useEffect(()=>{
    if(userForm.email==="" || emailRegex.test(userForm.email)){
       setEmailMess('')
    }
    else{
      setEmailMess('Please enter valid email address!')
    }
  },[userForm.email])

  useEffect(()=>{
    console.log(userForm.password)
    if(userForm.password==="" || passRegex.test(userForm.password)){
       setPassMess('')
    }
    else{
      setPassMess('Please enter strong password include Character, Symbol and Number!')
    }
  },[userForm.password])

  return (
    <div>
      {/* <p>{JSON.stringify(userForm)}</p> */}
      <form className="form">
        <p className="form-title">Sign Up</p>
        <div className="input-container">
          <input
            type="text"
            onChange={handleChange}
            name="name"
            value={userForm.name}
            placeholder="Name"
            ref={name}
          />
          {nameMess && <p style={{color:'red'}}>{nameMess}</p>}
        </div>
        <div className="input-container">
          <input
            type="email"
            onChange={handleChange}
            name="email"
            value={userForm.email}
            placeholder="Email"
            ref={email}
          />
          {emailMess && <p style={{color:'red'}}>{emailMess}</p>}
        </div>
        <div className="input-container">
          <input
            type="password"
            onChange={handleChange}
            name="password"
            value={userForm.password}
            placeholder="Password"
            ref={password}
          />
          {passMess && <p style={{color:'red'}}>{passMess}</p>}
        </div>
        <div className="input-container">
          <input
            type="password"
            onChange={handleChange}
            name="conpassword"
            value={userForm.conpassword}
            placeholder="Confirm Password"
            ref={conpassword}
          />
        </div>
        <button type="submit" onClick={handleSubmit} className="submit">
          Sign Up
        </button>
        <center>
          <Link to="/" className="singinlink">
            Sign in
          </Link>
        </center>
      </form>

      <div className="container">
        <table className="table">
          <thead>
            <tr>
              <th scope="col">Name</th>
              <th scope="col">Email</th>
              <th scope="col">Password</th>
              <th scope="col">Confirm Password</th>
            </tr>
          </thead>
          <tbody>
            {
              users.map(user=>{
                return <tr>
                      <td>{user.name}</td>
                      <td>{user.email}</td>
                      <td>{user.password}</td>
                      <td>{user.conpassword}</td>
                  </tr>
              })
            }
          </tbody>
        </table>
      </div>
    </div>
  );
}



<nav className="navbar navbar-expand-lg bg-dark">
  <div className="container-fluid mx-1">
    <Link className="navbar-brand text-light" to="/">Health & Fitness</Link>
    <button className="navbar-toggler bg-light" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span className="navbar-toggler-icon"></span>
    </button>
    <div className="collapse navbar-collapse" id="navbarSupportedContent">
      <ul className="navbar-nav me-auto mb-2 mb-lg-0">
        <li className="nav-item">
          <Link className="nav-link active text-light" aria-current="page" to="/">Home</Link>
        </li>
        <li className="nav-item">
          <Link className="nav-link text-light" to="#">Link</Link>
        </li>
      </ul>
        <Link className="btn btn-outline-success" to="/signin">SignIn</Link>
    </div>
  </div>
</nav>